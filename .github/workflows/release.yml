name: Rust Release

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: # https://github.com/rust-build/rust-build.action#supported-targets
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-apple-darwin
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Compile
        id: compile
        run: |
          cargo build --release --target ${{ matrix.target }}
          echo "::set-output name=BUILT_ARCHIVE::target/${{ matrix.target }}/release/asm-processor"
          echo "::set-output name=BUILT_CHECKSUM::target/${{ matrix.target }}/release/asm-processor.sha256sum"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: asm-processor-${{ matrix.target }}
          path: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish crate
        uses: katyo/publish-crates@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: "rust/"
          registry-token: ${{ secrets.CRATE_AUTH_TOKEN }}